#
# Cookbook:: st2
# Recipe:: user
#
# Copyright (c) 2017 Brian Clark <brian@clark.zone>

group node['st2']['system_user']['group'] do
  action :create
end

system_user = user node['st2']['system_user']['user'] do
  group node['st2']['system_user']['group']
  shell node['st2']['system_user']['shell'] if node['st2']['system_user']['shell']
  home node['st2']['system_user']['home'] || "/home/#{node['st2']['system_user']['user']}"
  manage_home true
  action :create
end

directory ::File.join(system_user.home, '.ssh') do
  owner system_user.username
  group system_user.group
  mode '0700'
  action :create
end

key_content = node.run_state['st2_system_user_ssh_key_content'] ||
              node['st2']['system_user']['ssh_key_content']

pub_key_content = node.run_state['st2_system_user_ssh_public_key_content'] ||
                  node['st2']['system_user']['ssh_public_key_content']

authorized_keys =
  if node.run_state['st2_system_user_authorized_keys']
    node.run_state['st2_system_user_authorized_keys']
  else
    node['st2']['system_user']['authorized_keys']
  end

file ::File.join(system_user.home, '.ssh', 'id_rsa') do
  content key_content
  sensitive true
  owner system_user.username
  group system_user.group
  mode '0640'
  only_if { key_content }
end

file ::File.join(system_user.home, '.ssh', 'id_rsa.pub') do
  content pub_key_content
  sensitive true
  owner system_user.username
  group system_user.group
  mode '0640'
  only_if { pub_key_content }
end

file ::File.join(system_user.home, '.ssh', 'authorized_keys') do
  owner system_user.username
  group system_user.group
  mode '0644'

  content lazy {
    pubkeys = authorized_keys.dup
    if pub_key_content
      pubkeys.unshift(pub_key_content) unless pubkeys.include?(pub_key_content)
    end
    "# Generated by Chef. Don't edit!\n" << pubkeys.join("\n")
  }
  only_if { authorized_keys }
end
